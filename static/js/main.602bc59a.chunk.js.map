{"version":3,"sources":["Components/Dates/Dates.js","Components/Events/Events.js","Components/Calendar/Calendar.js","App.js","serviceWorker.js","index.js"],"names":["dates","props","react_default","a","createElement","className","getEventdate","type","onBlur","getInput","onClick","addEvents","events","console","log","show","map","event","index","date","key","Calendar","state","dateContext","moment","today","showMonthPopup","showYearPopup","selectedDay","showInput","eventday","eventMonth","eventYear","eventInput","weekdays","weekdayShort","weekdaysShort","months","year","_this","format","month","daysInMonth","currentDate","get","currentDay","firstdayofMonth","startOf","setMonth","monthNo","indexOf","Object","assign","set","setState","changeMonth","e","SelectMonth","ev","data","prevMonth","subtract","onPrevMonth","nextMonth","add","onNextMonth","selectList","popup","href","monthNav","title","_this2","showYearEditor","showYearNav","setYear","onYearChange","target","value","onKeyUpYear","which","yearNav","ref","yearInput","defaultValue","onKeyUp","onChange","placeholder","onDoubleClick","clickedDay","eventdate","getEventInput","newInput","concat","ondayClick","day","_this3","this","blanks","i","push","d","selectedClass","readOnly","totalSlots","rows","cells","forEach","row","insertRow","slice","length","trElems","colSpan","Events","Dates","Component","App","Components_Calendar_Calendar","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.602bc59a.chunk.js","sourcesContent":["import React from 'react';\nimport './dates.css';\n\nconst dates = (props) => {\n    return (\n        \n        <div>\n            <div className=\"eventHeader\">\n                <span className=\"Eventdate\">{props.getEventdate}</span>\n                <span className=\"text-right\">Add Your Appointments</span>\n            </div>\n            <input type=\"text\" className=\"form-control\" onBlur={props.getInput} />\n            <button type=\"button\" className=\"submit-btn\" onClick={props.addEvents} >submit</button>\n        </div>\n    );\n\t\n\t\n}\nexport default dates;\n","import React from 'react';\n\nconst events = (props) => {\n    console.log(props.show);\n    return (\n        <div className=\"Events\">\n            <div className=\"table-responsive\">\n                <table className=\"table table-bordered\">\n                    <thead>\n                        <tr>\n                            <th className=\" text-capitalize\">date</th>\n                            <th>Event</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {props.show.map((event, index) => {return (\n                            <tr>\n                                <td>{props.date}</td>\n                                <td key={index}>{event}</td>\n                            </tr>\n                            \n                            )}) }\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}\n\nexport default events;","import React, {Component} from 'react';\r\nimport moment from 'moment';\r\nimport EventInput from '../Dates/Dates';\r\nimport Events from '../Events/Events';\r\nimport './Calendar.css';\r\n\r\n class Calendar extends Component {\r\n \tstate = {\r\n \t\tdateContext : moment(),\r\n \t\ttoday : moment(),\r\n \t\tshowMonthPopup : false,\r\n \t\tshowYearPopup: false,\r\n        events: [],\r\n        selectedDay: null,\r\n        showInput: false,\r\n        eventday: '',\r\n        eventMonth: '',\r\n        eventYear: '',\r\n        eventInput: []\r\n \t}\r\n \tweekdays = moment.weekdays();\r\n \tweekdayShort = moment.weekdaysShort();\r\n \tmonths = moment.months();\r\n \tyear = () => {\r\n \t\treturn this.state.dateContext.format(\"Y\");\r\n \t}\r\n \tmonth = () => {\r\n \t\treturn this.state.dateContext.format(\"MMMM\")\r\n \t}\r\n \tdaysInMonth = () => {\r\n \t\treturn this.state.dateContext.daysInMonth();\r\n \t}\r\n \tcurrentDate = () => {\r\n \t\treturn this.state.dateContext.get('date');\r\n \t}\r\n \tcurrentDay = () => {\r\n \t\treturn this.state.dateContext.format('D')\r\n \t}\r\n \tfirstdayofMonth = () => {\r\n \t\tlet dateContext = this.state.dateContext;\r\n \t\tlet firstday = moment(dateContext).startOf('month').format('d');\r\n \t\treturn firstday;\r\n    }\r\n     \r\n \tsetMonth = (month) => {\r\n \t\tlet monthNo = this.months.indexOf(month);\r\n \t\tlet dateContext = Object.assign({}, this.state.dateContext);\r\n \t\tdateContext = moment(dateContext).set('month', monthNo);\r\n \t\tthis.setState({\r\n \t\t\tdateContext: dateContext\r\n \t\t});\r\n \t}\r\n \tchangeMonth = (e, month) => {\r\n \t\tthis.setState({ showMonthPopup: !this.state.showMonthPopup });\r\n \t}\r\n \tSelectMonth = (ev, data) => {\r\n \t\tthis.setMonth(data);\r\n \t\tthis.props.changeMonth && this.props.changeMonth();\r\n    }\r\n    prevMonth = () => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).subtract(1, \"month\");\r\n        this.setState({ dateContext: dateContext });\r\n        this.props.onPrevMonth && this.props.onPrevMonth();\r\n    } \r\n\r\n    nextMonth = () => {\r\n        let dateContext = Object.assign({}, this.state.dateContext);\r\n        dateContext = moment(dateContext).add(1, \"month\");\r\n        this.setState({\r\n            dateContext: dateContext\r\n        });\r\n        this.props.onNextMonth && this.props.onNextMonth();\r\n    }\r\n    \r\n \tselectList = (props) => {\r\n \t\tlet popup = props.data.map((data) => {\r\n \t\t\treturn (\r\n \t\t\t\t<div key={data}>\r\n\t \t\t\t\t\t<button href=\"\" onClick={(ev) => {this.SelectMonth(ev, data)}}>{data}</button>\r\n \t\t\t\t</div>\r\n \t\t\t)\r\n \t\t});\r\n \t\treturn (\r\n\t\t\t\t<div className=\"month-popup\">\r\n\t\t\t\t\t{popup} \r\n\t\t\t\t</div> \r\n \t\t\t)\r\n \t}\r\n \t\r\n \tmonthNav = () => {\r\n \t\treturn (\r\n \t\t\t<span className=\"label-month\" title=\"click to change month\"  onClick={(e)=> {this.changeMonth(e, this.month())}} >\r\n                 {this.month()}\r\n \t\t\t\t{\r\n \t\t\t\t\tthis.state.showMonthPopup && \r\n \t\t\t\t\t<this.selectList data={this.months} />\r\n\r\n \t\t\t\t}\r\n \t\t\t</span>\r\n \t\t\t)\r\n    }\r\n    showYearEditor = () => {\r\n\t\tthis.setState({ showYearNav: true })\r\n \t}\r\n \t\r\n \tsetYear = (year) => {\r\n\t\tlet dateContext = Object.assign({}, this.state.dateContext);\r\n\t\tdateContext = moment(dateContext).set('year', year);\r\n\t\tthis.setState({ dateContext: dateContext })\r\n \t}\r\n \tonYearChange = (e) => {\r\n \t\tthis.setYear(e.target.value);\r\n\t\tthis.props.onYearChange && this.props.onYearChange(e, e.target.value);\r\n    }\r\n    \r\n    onKeyUpYear = (e) => {\r\n        if(e.which === 13 || e.which === 27){\r\n            this.setYear(e.target.value);\r\n            this.setState({ showYearNav: false })\r\n        }\r\n    }\r\n    \r\n \tyearNav = () => {\r\n \t\treturn (\r\n \t\t\tthis.state.showYearNav ? \r\n \t\t\t<input type=\"number\" \r\n \t\t\t\tclassName=\"year-editor\" \r\n \t\t\t\tref={(yearInput) => {this.yearInput = yearInput}}\r\n \t\t\t\tdefaultValue={this.year()}\r\n \t\t\t\tonKeyUp={(e) => this.onKeyUpYear(e)} \r\n \t\t\t\tonChange={(e) => this.onYearChange(e)}\r\n \t\t\t\tplaceholder=\"year\"\r\n \t\t\t\t/> : \r\n \t\t\t<span className=\"label-year\" title=\"click twice to change year\" onDoubleClick={(e) => {this.showYearEditor()}}>\r\n \t\t\t\t{this.year()}\r\n \t\t\t</span>\r\n \t\t)\r\n \t}\r\n \tclickedDay = (ev) => {\r\n        this.setState({ showInput : true });\r\n        this.setState({ eventday: ev.target.value })\r\n        let month = this.month();\r\n        this.setState({ eventMonth: month })\r\n        let year = this.year();\r\n        this.setState({ eventYear: year })\r\n    }\r\n    eventdate = () => {\r\n        return(\r\n            <span>\r\n                {this.state.eventday} {this.state.eventMonth}, {this.state.eventYear}\r\n            </span>\r\n        )\r\n    }\r\n    showInput = () => {\r\n        this.setState({ showInput: true });\r\n    }\r\n    getEventInput = (e) =>{\r\n        let newInput = this.state.eventInput.concat(e.target.value);\r\n        this.setState({eventInput: newInput})\r\n    }\r\n    ondayClick = (e, day) => {\r\n        this.props.ondayClick && this.props.ondayClick();\r\n    }\r\n\r\n \trender (){\r\n \t\tlet weekdays = this.weekdayShort.map((day) => {\r\n \t\t\treturn (\r\n \t\t\t\t<td key={day} className=\"week-days\">{day}</td>\r\n \t\t\t);\r\n         });\r\n \t\tlet blanks = [];\r\n \t\tfor(let i = 0; i < this.firstdayofMonth(); i++){\r\n\t\t\tblanks.push(<td key={i * 80} className='emptySlot'>{\"\"}</td>)\r\n        };\r\n\t\tlet daysInMonth = [];\r\n\t\tfor(let d = 1; d  <= this.daysInMonth(); d++ ){\r\n            let className = (d === this.currentDay() ? \"current-day\" : \"day\");\r\n            let selectedClass = (d === this.state.selectedDay ? \"selected-day\" : \"\")\r\n\t\t\tdaysInMonth.push(\r\n\t\t\t\t<td key={d}  className={className + selectedClass}>\r\n\t\t\t\t\t<input onClick = {this.clickedDay} value={d} readOnly/>\r\n\t\t\t\t</td>\r\n\t\t\t)\r\n        };\r\n\r\n\t\tlet totalSlots = [...blanks, ...daysInMonth];\r\n\t\tlet rows = [];\r\n        let cells = [];\r\n        \r\n\r\n\t\ttotalSlots.forEach((row, i) => {\r\n\t\t\tif((i % 7) !== 0){\r\n\t\t\t\tcells.push(row);\r\n\t\t\t} else {\r\n\t\t\t\tlet insertRow = cells.slice();\r\n\t\t\t\trows.push(insertRow);\r\n\t\t\t\tcells = [];\r\n\t\t\t\tcells.push(row);\r\n\t\t\t}\r\n\t\t\t\r\n\t\t\tif(i === totalSlots.length - 1){\r\n\t\t\t\tlet insertRow = cells.slice();\r\n\t\t\t\trows.push(insertRow);\r\n\t\t\t}\r\n\t\t});\r\n\r\n\t\tlet trElems = rows.map((d, i) => {\r\n\t\t\treturn (\r\n\t\t\t\t<tr key={i * 100}>{d}</tr>\r\n\t\t\t);\r\n\t\t});\r\n\r\n \t\treturn(\r\n \t\t\t<div className=\"\">\r\n \t\t\t\t<div className=\"container-fluid border py-3 \">\r\n\t\t\t\t\t<div className=\"row jusify-content-center\">\r\n\t\t\t\t\t\t<div className=\"col-12 col-md-8 col-lg-8\">\r\n                            <div className=\"table-responsive\">\r\n                                <table className=\"table table-bordered Calendar\">\r\n                                    <thead>\r\n                                        <tr className=\"calendar-header\">\r\n                                            <td colSpan='3' className=\"nav-month\"> <this.monthNav\t/></td>\r\n                                            <td colSpan=\"3\" className=\"nav-year\"> <this.yearNav /> </td>\r\n                                            <td colSpan=\"1\">\r\n                                                <i className=\"fa fa-long-arrow-left mr-2\" title=\"click to change months\" onClick={(e) => {this.prevMonth()}}></i>\r\n                                                <i className=\"fa fa-long-arrow-right\" title=\"click to change month\" onClick={(e) => {this.nextMonth()}}></i>\r\n                                            </td>\r\n\r\n                                        </tr>\r\n                                    </thead>\r\n                                    <tbody>\r\n                                        <tr>{weekdays}</tr>\r\n                                        {trElems}\r\n                                    </tbody>\r\n                                </table>\r\n                            </div>\r\n                                \r\n                            </div>\r\n                            <div className=\"col-12 col-md-4 col-lg-4\">\r\n                                <Events  date={this.eventdate()} show={this.state.eventInput}  />\r\n                            </div>\r\n                        </div>\r\n                        {this.state.showInput ? \r\n                        <EventInput getInput={this.getEventInput} getEventdate={this.eventdate()}/>  : null}\r\n \t\t\t\t    </div>\r\n \t\t\t</div>\r\n \t\t);\r\n \t}\r\n};\r\n\r\nexport default Calendar;\t","import React, { Component } from 'react';\nimport Calendar from './Components/Calendar/Calendar';\nimport './App.css';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App py-3 my-5\">\n            <h1 className=\"text-center\">My CalenDar App</h1>\n            <p className=\"text-center\">Click a day in the Calendar to add an event</p>\n            <Calendar />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}